#通过spring.application.name属性，我们可以指定微服务的名称后续在调用的时候只需要使用该名称就可以进行服务的访问。
spring.application.name=eureka-client
#为了在本机上测试区分服务提供方和服务注册中心，使用server.port属性设置不同的端口。
server.port=2000

#是否需要秘钥认证
management.security.enabled=false

#
spring.kafka.bootstrap-servers[0]=localhost:9092

#
#spring.sleuth.enabled=true
#spring.zipkin.enabled=true
spring.sleuth.sampler.percentage=1
spring.zipkin.base-url=http://localhost:1204

#指定服务注册中心的位置。
eureka.client.serviceUrl.defaultZone=http://localhost:1200/eureka/
eureka.instance.leaseRenewalIntervalInSeconds=5
eureka.instance.prefer-ip-address=true

#
spring.cloud.config.uri=http://localhost:1201


#druid datasource

#jdbc config
spring.datasource.url=jdbc:mysql://localhost:3306/mybatis?useUnicode=true&characterEncoding=utf-8&useSSL=false
# 或spring.datasource.druid.url=
spring.datasource.username=root
# 或spring.datasource.druid.username=
spring.datasource.password=iflytek
# 或spring.datasource.druid.password=
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#或 spring.datasource.druid.driver-class-name=

#pool config
##Druid
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=10
spring.datasource.druid.min-idle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#spring.datasource.druid.max-open-prepared-statements= #和上面的等价
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.validation-query-timeout=60000
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=100000
# 配置一个连接在池中最大生存的时间，单位是毫秒
#spring.datasource.druid.max-evictable-idle-time-millis=

spring.datasource.druid.filters=stat,wall,log4j
# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable=true
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.principal-session-name=
spring.datasource.druid.web-stat-filter.principal-cookie-name=
spring.datasource.druid.web-stat-filter.profile-enable=true

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
spring.datasource.druid.stat-view-servlet.deny=

# 配置StatFilter
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000

# 配置WallFilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
#spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false

#mybatis
# Property 'configuration' and 'configLocation' can not specified with together
#mybatis.config-location=mybatis-config.xml
#mybatis.check-config-location=false
mybatis.configuration.map-underscore-to-camel-case=true
#mybatis.type-aliases-package=tk.mybatis.springboot.model
mybatis.type-aliases-package=com.domain
#mybatis.mapper-locations=classpath:mapper/*.xml
#设置执行模式（SIMPLE, REUSE, BATCH），默认为SIMPLE
mybatis.executor-type=SIMPLE

#mapper
#mappers 多个接口时逗号隔开
#mapper.mappers=tk.mybatis.springboot.util.MyMapper
#mapper.mappers=tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.MySqlMapper
mapper.mappers=com.mapper.GenericMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.database=MYSQL
spring.jpa.show-sql=true